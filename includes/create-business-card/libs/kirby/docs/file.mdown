## F (File)

The f class simplifies file handling 

### Function: f::write

Create a new file with some content

#### Syntax

    f::write('filename', 'content');
    
#### Arguments

1. filename - (string) The filename for the new file
2. content - (mixed) Content can either be a string, binary stuff or an array. Arrays will be converted to json

#### Returns

- (boolean) returns true or false

#### Example

    f::write('test.txt', 'hello');
    // creates a new text file with hello as content

    // create a new file
    f::write('text.txt', array('test' => 'hello'));
    // creates a new file and encodes the array as json    


----



### Function: f::read

Read a file and return all the content

#### Syntax

    f::read('filename'[, 'format']);
    
#### Arguments

1. filename - (string) The filename/path to the file
2. format - (string) The content can be parsed at once (json, xml, php)

#### Returns

- (mixed) returns the content or false

#### Example

    $content = f::read('test.txt');
    // i.e. content is hello

    $content = f::read('text.txt', 'json');
    // returns an array with the parsed content



----



### Function: f::move

Move the file to a new directory or rename it

#### Syntax

    f::move('old_filename', 'new_filename');
    
#### Arguments

1. old_filename - (string) The path to the original file
2. new_filename - (string) The path to where the file should be next

#### Returns

- (boolean) returns true or false

#### Example

    $move = f::move('test.txt', 'super.txt');

    if($move) echo 'The file has been moved';



----



### Function: f::remove

Removes the file

#### Syntax

    f::remove('filename');
    
#### Arguments

1. filename - (string) The path to the file

#### Returns

- (boolean) returns true or false

#### Example

    $remove = f::remove('test.txt');

    if($remove) echo 'The file has been removed';



----



### Function: f::extension

Get the extension of the filename

#### Syntax

    f::extension('filename');
    
#### Arguments

1. filename - (string) The filename

#### Returns

- (string) returns the extension

#### Example

    $extension = f::extension('test.txt');
    // extension is txt


----



### Function: f::filename

Get the filename without the path

#### Syntax

    f::filename('path');
    
#### Arguments

1. path - (string) The path to the file

#### Returns

- (string) returns the filename

#### Example

    $filename = f::filename('/var/www/test.txt');
    // filename is test.txt


----



### Function: f::name

Get the name without the path and the extension

#### Syntax

    f::name('path');
    
#### Arguments

1. path - (string) The path to the file

#### Returns

- (string) returns the name

#### Example

    $name = f::name('/var/www/test.txt');
    // name is test



----



### Function: f::dirname

Get the name of the directory without filename itself

#### Syntax

    f::dirname('path');
    
#### Arguments

1. path - (string) The path to the file

#### Returns

- (string) returns the dirname

#### Example

    $dirname = f::dirname('/var/www/test.txt');
    // dirname is /var/www



----



### Function: f::size

Get the size of the file

#### Syntax

    f::size('path'[,'nice_size']);
    
#### Arguments

1. path - (string) The path to the file
2. nice_size - (boolean) true: the size will be returned in a human readable format, otherwise in kb   

#### Returns

- (mixed) returns the size

#### Example

    $size = f::size('/var/www/test.txt');
    // size is ie: 1231939

    $size = f::size('/var/www/test.txt', true);
    // size is ie: 1,2 MB


----



### Function: f::nice_size

Converts kb into a human readable size format

#### Syntax

    f::nice_size('size');
    
#### Arguments

1. size - (int) the size of a file in kb

#### Returns

- (string) returns the readable size

#### Example

    $nice_size = f::nice_size(1231939);
    // nice size is: 1,2 MB


----



### Function: f::convert

Converts the filename into a new file type

#### Syntax

    f::convert('filename', 'filetype');
    
#### Arguments

1. filename - (string) the name of the file
2. filetype - (string) the extension of the new type. i.e. jpg

#### Returns

- (string) returns the new filename

#### Example

    $convert = f::convert('test.txt', 'jpg');
    // convert will be test.jpg


----



### Function: f::safe_name

Converts a given string into a safe filename

#### Syntax

    f::save_name('string');
    
#### Arguments

1. string - (string) the unsafe string

#### Returns

- (string) returns the new filename

#### Example

    $safe = f::safe_name('Ã¼ber genious.txt');
    // safe will be ueber-genious.txt


